
In https://repo.or.cz/alpine.git?a=commit;h=4d77713f495bc1e797393cb05e88f17f7
alpine switch to generating message IDs using the built in oauth2 random
UUID generator. Unfortunately this is not very robust as it uses a sequence
of calls to random(), which is seeded.

Duplicate message IDs have been seen in the wild, use libuuid instead.

diff -wpruN --no-dereference '--exclude=*.orig' a~/imap/src/c-client/oauth2_aux.c a/imap/src/c-client/oauth2_aux.c
--- a~/imap/src/c-client/oauth2_aux.c	1970-01-01 00:00:00
+++ a/imap/src/c-client/oauth2_aux.c	1970-01-01 00:00:00
@@ -24,6 +24,8 @@
 #include "json.h"
 #include "oauth2_aux.h"
 
+#include <uuid/uuid.h>
+
 OA2_type oauth2_find_extra_parameter(OAUTH2_S *, char *);
 JSON_S *oauth2_json_reply(OAUTH2_SERVER_METHOD_S, OAUTH2_S *, int *);
 char *xoauth2_server(char *, char *);
@@ -148,25 +150,13 @@ void oauth2_login_hint(OAUTH2_S *oauth2,
  */
 char *oauth2_generate_state(void)
 {
-  char rv[37];
+  char rv[UUID_PRINTABLE_STRING_LENGTH];
+  uuid_t uu;
   int i;
 
   rv[0] = '\0';
-  for(i = 0; i < 4; i++)
-     sprintf(rv + strlen(rv), "%02x", (unsigned int) (random() % 256));
-  sprintf(rv + strlen(rv), "%c", '-');
-  for(i = 0; i < 2; i++)
-     sprintf(rv + strlen(rv), "%02x", (unsigned int) (random() % 256));
-  sprintf(rv + strlen(rv), "%c", '-');
-  for(i = 0; i < 2; i++)
-     sprintf(rv + strlen(rv), "%02x", (unsigned int) (random() % 256));
-  sprintf(rv + strlen(rv), "%c", '-');
-  for(i = 0; i < 2; i++)
-     sprintf(rv + strlen(rv), "%02x", (unsigned int) (random() % 256));
-  sprintf(rv + strlen(rv), "%c", '-');
-  for(i = 0; i < 6; i++)
-     sprintf(rv + strlen(rv), "%02x", (unsigned int) (random() % 256));
-  rv[36] = '\0';
+  uuid_generate(uu);
+  uuid_unparse_lower(uu, rv);
   return cpystr(rv);
 }
 
